set dotenv-load := false

COLOR := "\\033[0;35m"
NO_COLOR := "\\033[0m"

# Show all available recipes
@_default:
    printf "\n{{ COLOR }}# Docker (path: \`docker/\`)\n"
    printf "=========================={{ NO_COLOR }}\n"
    just --list --unsorted

################
# Offline mode #
################

# Export third-party Docker images as `.tar.gz` files
dump-3p:
    #!/usr/bin/env bash
    cd ..
    mkdir -p docker/images/;
    git grep "image:" \
    | grep "compose.yml" \
    | grep --invert-match "openverse" \
    | awk 'NF>1{print $NF}' \
    | while read line; do
        name="docker/images/"$(echo $line | sed 's:/:-:g')".tar.gz";
        echo "Exporting image $line to file $name";
        docker image pull --quiet $line;
        docker image save $line | gzip > $name;
      done

# Export pre-commit Docker images as `.tar.gz` files
dump-lint:
    #!/usr/bin/env bash
    cd ..
    images=("rhysd/actionlint" "ghcr.io/hadolint/hadolint" "koalaman/shellcheck" "mvdan/shfmt");
    for line in "${images[@]}"; do
      name="docker/images/"$(echo $line | sed 's:/:-:g')".tar.gz";
      echo "Exporting image $line to file $name";
      docker image pull --quiet $line;
      docker image save $line | gzip > $name;
    done

# Export Openverse Docker images as `.tar.gz` files
dump-ov: build
    #!/usr/bin/env bash
    cd ..
    mkdir -p docker/images/;
    docker image ls \
    | grep "openverse-" \
    | awk 'NF>1{print $1}' \
    | while read line; do
        name="docker/images/"$line".tar.gz";
        echo "Exporting image $line to $name";
        docker image save $line | gzip > $name;
      done

# Build all images for Openverse services
build:
    ../ov build
    just ../dc build

# Load all images saved in the `images/` dir
load:
    #!/usr/bin/env bash
    ls images/ \
    | while read line; do
        name="images/"$line;
        echo "Importing image from $name";
        docker image load < $name;
      done
